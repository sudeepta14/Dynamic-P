class Solution {
    public int maximalRectangle(char[][] matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0)
            return 0;
        
        int row = matrix.length;
        int col = matrix[0].length;
        
        int[] left = new int[col];
        int[] right = new int[col];
        int[] height = new int[col];
        
        Arrays.fill(right, col - 1);
        int max = 0;
        
        for (int i = 0; i < row; i++){
            int currleft = 0;
            int currright = col - 1;
            for (int j = 0; j < col; j++){
                if (matrix[i][j] == '1'){
                    left[j] = Math.max(currleft, left[j]);
                } else {
                    currleft = j + 1;
                    left[j] = 0;
                }
            }
            
            for (int j = col - 1; j >= 0; j--){
                if (matrix[i][j] == '1'){
                    right[j] = Math.min(right[j], currright);
                } else {
                    currright = j - 1;
                    right[j] = col - 1;
                }
            }
            
            for (int j = 0; j < col; j++){
                if (matrix[i][j] == '1'){
                    height[j] ++;
                } else {
                    height[j] = 0;
                }
            }
            for (int j = 0; j < col; j++){
                max = Math.max(max, (right[j] - left[j] + 1) * height[j]);
            }
        }
        
        return max;
        
    }
}
