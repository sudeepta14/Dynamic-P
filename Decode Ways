class Solution {
    public int numDecodings(String s) {
        char[] chars = s.toCharArray();
        int n = chars.length;
        if (n == 0 || (n == 1 && chars[0] == '0'))
            return 0;
        
        int[] ways = new int[n + 1];
        ways[0] = 1;
        
        for (int i = 0; i < n; i++) {
            if (chars[i] >= '1') {
                ways[i + 1] += ways[i];
            }
            if (i >= 1) {
                int j = 10 * (chars[i - 1] - '0') + chars[i] - '0';
                if (j >= 10 && j <= 26) {
                    ways[i + 1] += ways[i - 1];
                }
            }
        }
        
        return ways[n];
    }
}

class Solution {
    public int numDecodings(String s) {
        if(s.length()==0) return 0;
        if(s.length()==1 && s.equals("0")) return 0;
        if(s.length()==1) return 1;
        int first, second = 1;
        first = (s.charAt(s.length()-1)=='0')?  0:1;
        char[] c = s.toCharArray();
        
        int sum = 0,cout = 0;
        
        for(int i = c.length-2; i>=0;i--){
            
            if(c[i]=='0') cout = 0;
            
            else {sum = 10*(c[i]-'0')+ (c[i+1]-'0');
            
            if(sum<=26) cout = first + second;
            
            else cout = first;}
            
            second = first;
            
            first = cout;
        }
        return cout;
    }
}
